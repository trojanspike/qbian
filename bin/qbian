#!/usr/bin/env bash
# Directory to work in
export VERSION=0.1.18

export package=$( basename $0 );
PWD=$(pwd)
BASE=$(readlink -f "$0")
BASE=$(dirname "$BASE")
BASE=$( cd "$BASE/../" && pwd )

# Local qbian directories
QBIAN_DISK_DIR="$BASE/Provision/disks"

QBIAN_MINIBIAN_DIR="$BASE/Provision/minibian"
QBIAN_CLI_DIR="$BASE/Provision/cli"
QBIAN_TOOLS_DIR="$BASE/Provision/tools"

# Qbian cli exports
export BASE="$BASE"
export PROVISION="$BASE/Provision"
export QBIAN_DISK_DIR="$QBIAN_DISK_DIR"
export QBIAN_MINIBIAN_DIR="$QBIAN_MINIBIAN_DIR"
export QBASE="$BASE/qemu_boot"
export EXE="$BASE/bin/qbian"
export SSH="$PROVISION/ssh"
export INJECTS="$BASE/injects"


# @ Check if -d $PWD/.Qbian
if [ ! "$1" == "init" ] && [ ! "$1" == "--help" ] && [ ! "$1" == "-h" ] && [ ! "$1" == "--run-sd" ] && [ ! "$1" == "-v" ] && [ ! "$1" == "--version" ];then
	# Quick work around for time being
	# TODO :: Improve on
	if [ -d "$PWD/.Qbian/disks" ] && [ -d "$PWD/.Qbian/ssh" ] && [ -f "$PWD/Qbianfile" ];then
		export QBIAN_DISK_DIR="$PWD/.Qbian/disks"
		export SSH="$PWD/.Qbian/ssh"
		export INJECTS="$PWD/injects"
		source $PWD/Qbianfile
	else
		echo "Qbian Environment not found. Run $ $package init <package-name>"
		exit 1
	fi
fi

# Local scripts files
SUDO=$(which sudo)
DD=$(which dd)

if [ "$#" -gt 0 ]; then
        case "$1" in
####
# help
# Display cli commands and options
####
                -h|--help)
				$QBIAN_TOOLS_DIR/help
                exit 0
                ;;
###
# --verision || -v
# 0 params
# Display cli version
###
				--version|-v)
					$QBIAN_TOOLS_DIR/version
					exit 0;
				;;
###
# --run-img
# 2 params, $1:image-name, $2:ssh-port
# Run a qbian image withing qemu emulator
###
                --run-img)
                  if [ $# -eq 3 ]; then
                    NAME=$2
                    SSH_PORT=$3
                    CONFIG=$(cat $QBIAN_DISK_DIR/$NAME/config.qemu)
                    $QBASE/start.sh $QBIAN_DISK_DIR/$NAME/2015-02-18-wheezy-minibian.img $SSH_PORT "$CONFIG"
                  else
                    echo "Not enough params"
                    echo "$package --run-img <NAME> <SSH_PORT>"
                  fi
                  exit 0
                  ;;
###
# --run-sd
# 3 params, $1:device-file $2:ssh-port, $3:qemu-config
# Run an sd card qbain image within the qemu emulation env
###
                --run-sd)
                  if [ ! $# -eq 4 ]; then
                    echo "Error , not enough params"
                    echo "$ qbian --run-sd /dev/sdc 5522 \"config\""
                    exit 1
                  fi

                  DEVICE=$2
                  SSH=$3
                  CONFIG=$4
                  clear && echo "Launching qemu with sd $DEVICE"
                  $SUDO $QBASE/start.sh $DEVICE $SSH "$CONFIG"
                  exit 0
                  ;;
###
# --list
# 0 params
# Display a list of images created
###
                --list)
                  if [ ! -d $QBIAN_DISK_DIR/default/ ]; then
                    echo "Default image needs to be created"
                    echo "$ $package --create-default"
                    exit 2
                  fi
										echo -e "\e[0;33m---- Disks available ----\e[0m"
                  for i in $( ls -d $QBIAN_DISK_DIR/*/ );
                    do
                      echo $(basename $i)
                      echo $(cat $QBIAN_DISK_DIR/$(basename $i)/config.qemu)
											echo -e "\e[0;35m$ $package --run-img $(basename $i) 5522\e[0m"
                      echo -e "\e[0;30m--------------------------------------|\e[0m"
                    done
										echo -e "\e[0;33m---- Injects available ----\e[0m"
                  for i in $( ls -d $INJECTS/*/ );
                    do
                      echo $(basename $i)
											echo -e "\e[0;35m$ $package --create-img $(basename $i) <config> <resize>\e[0m"
                      echo -e "\e[0;30m--------------------------------------|\e[0m"
                    done
                  exit 0
                  ;;
###
# --skel
# 1 param, $1:skel-name
# Create an empty skel used by the same name image
###
                --skel)
                  if [ $# -eq 2 ]; then
                    NAME=$2
									if [ ! -d $INJECTS/$NAME ];then
				                    	rsync -avz $BASE/Provision/InjectSkeleton/* $INJECTS/$NAME
									fi
                  else
                    echo "Not enough params $ qbian --skel <NAME>"
                  fi
                  exit 0
                ;;
###
# --create-img
# 3-4 params, $1:image-name $2:qemu-config $3:resize-img[options] $4:image-to-use[options]
# create a qbain image
###
                --create-img)
                  if [ "$#" -eq 4 ] || [ "$#" -eq 5 ]; then
                  NAME=$2 # name
                  CONFIG=$3 # config
                  RESIZE=$4 # resize
									IMAGE=$5 # Img to use

                  if [ ! -d $QBIAN_DISK_DIR/default ] && [ -z $DEFAULT_IMG ] ; then
                    echo "Default disk must be created before any others"
                    exit 1
                  fi
                    if [ -f "$QBIAN_DISK_DIR/default/2015-02-18-wheezy-minibian.img" ]; then
                      export BASE_IMAGE="$QBIAN_DISK_DIR/default/2015-02-18-wheezy-minibian.img"
                    fi
										if [ ! -z "$IMAGE" ] && [ -f "$QBIAN_DISK_DIR/$IMAGE/2015-02-18-wheezy-minibian.img" ];then
											export BASE_IMAGE="$QBIAN_DISK_DIR/$IMAGE/2015-02-18-wheezy-minibian.img"
										fi
                    if [ ! -d "$QBIAN_DISK_DIR/$NAME" ]; then
                      mkdir -p $QBIAN_DISK_DIR/$NAME && \
                      if [ ! -d $INJECTS/$NAME ]; then
                        rsync -avz $BASE/Provision/InjectSkeleton/* $INJECTS/$NAME
                      fi
										if [ "$DEFAULT_IMG" == "true" ];then
											$(which cp) $PWD/Qbianfile $INJECTS/$NAME/root/qbian.conf && \
											sed -i "s/{hostname}/$hostname/g" $INJECTS/$NAME/etc/hostname && \
											sed -i "s/{hostname}/$hostname/g" $INJECTS/$NAME/etc/hosts
										fi
                      echo "$CONFIG" > $QBIAN_DISK_DIR/$NAME/config.qemu # && \
                      $QBIAN_MINIBIAN_DIR/minibian-qemu.sh $NAME "$INJECTS/$NAME" "$RESIZE"
                    else
                      echo "Image \"$NAME\" is already available, use $ qbian --run $NAME <SSH>"
                      echo $QBIAN_DISK_DIR/$NAME
                    fi
                  else
                    echo "Not enough Params"
                    echo "$package --create-img <NAME> <CONFIG> <RESIZE:{optional}> <IMAGE:{optional}>"
                    echo "root/Provision.sh is also required"
                  fi
                  exit 0
                    ;;
###
# --remove
# params 2, $1:image-name $2:remove-skell-aswel[options]
# Delete an image
###
                  --remove)
					# if $3 == true -> remove skel aswell
            if [ $# -eq 2 ] || [ $# -eq 3 ] && [ -d "$QBIAN_DISK_DIR/$2" ]; then
              rm -Rfv $QBIAN_DISK_DIR/$2
						if [ "$3" == "true" ];then
							rm -Rfv $INJECTS/$2
						fi
            else
              echo "Error --remove , $2 not found"
            fi
            exit 0
            ;;
###
# --ssh
# 1 param, $1:ssh-string
# ssh into a qbian image using the created ssh keys
###
            --ssh)
              # $ qbian --ssh "user@127.0.0.1 -p 5522"
              # $ qbian --ssh "user@192.168.1.100"
              if [ ! $# -eq 2 ]; then
                echo "Not correct param amount"
                echo "qbian --ssh \"user@127.0.0.1 -p 5522\""
                echo "qbian --ssh \"user@192.168.1.100\""
                exit 2
              fi
              SSH_ARGS=$2
              ssh -i $SSH/id_rsa $SSH_ARGS
              exit 0
            ;;
###
# --create-default
# 0 params
# Create the qbian default image which all should be created from
###
            --create-default)
            if [ ! -d "$QBIAN_DISK_DIR/default" ]; then
                $QBIAN_CLI_DIR/create-default && \
				# assume unchanged for git
				git update-index --assume-unchanged $INJECTS/default/etc/hostname && \
				git update-index --assume-unchanged $INJECTS/default/etc/hosts
              else
                echo "image \"default\" already available, use $ $package --run-img default 5522"
              fi
              exit 0
              ;;
###
# --created-sd
# 2 params, $1:device $2:skel-to-use
# Create a qbian image straight onto an sd card
###
            --create-sd)
              if test $# -eq 3; then
								$QBIAN_CLI_DIR/create-sd $2 $3
              else
                echo "Not enough Params"
					  		echo "$package --create-sd <dev-img> <skel>"
              fi
              exit 0
            ;;
###
# --export
# 2 params $1:image-name $2:device
#
###
              --export)
              NAME=$2
              PATH=$3
                if [ ! $# -eq 3 ]; then
                  echo "Not enough params"
                  echo "$package --export <NAME> <DEVICE|PATH>"
                  echo "$package --export default /dev/sdc"
                  echo "$package --export default ~/Path/tp/create/image.img"
                  exit 1
                fi
                if [ -f $QBIAN_DISK_DIR/$NAME/2015-02-18-wheezy-minibian.img ]; then
                  echo "Exporting $NAME to $PATH"
                  $SUDO $DD if=$QBIAN_DISK_DIR/$NAME/2015-02-18-wheezy-minibian.img of=$PATH bs=4M
                else
                  echo "ERROR : No minibian image found"
                fi
                exit 0
                ;;
###
# --import
# 3 params $1:device|image-path $2:image-name $3:qbian-config
# Import a qbian image into the qbian folder structure.
###
              --import)
              PATH=$2
              NAME=$3
              CONFIG=$4
                if [ ! $# -eq 4 ]; then
                  echo "Not enough params"
                  echo "$package --import <DEVICE|PATH> <NAME> <CONFIG>"
                  echo "$package --import /dev/sdc imported \"-redir tcp:1374::1374\""
                  echo "$package --import ~/Path/tp/create/image.img imported \"-redir tcp:1374::1374\""
                  exit 1
                fi
                if [ ! -d $QBIAN_DISK_DIR/$NAME ]; then
                  /usr/bin/mkdir $QBIAN_DISK_DIR/$NAME && \
                  echo "$CONFIG" > $QBIAN_DISK_DIR/$NAME/config.qemu && \
                  echo "Importing $NAME to $PATH" && \
                  $SUDO $DD if=$PATH of=$QBIAN_DISK_DIR/$NAME/2015-02-18-wheezy-minibian.img bs=4M && \
                  echo "Import complete - please chown the imported image"
                else
                  echo "ERROR : image alread abailable"
                fi
                exit 0
                ;;
###
# --clear
# 0 params
# Delete all images
###
          --clear)
            rand=$RANDOM
            mv $QBIAN_DISK_DIR/DISK-HERE.txt $BASE/$rand && \
            rm -Rf $QBIAN_DISK_DIR/* && \
            mv $BASE/$rand $QBIAN_DISK_DIR/DISK-HERE.txt && \
				  rm -Rf $SSH/* && touch $SSH/.gitindex && \
				  rm -Rf $PROVISION/minibian/*.img && \
            exit 0
            ;;
          *)
				# target file : v0.1.* to use this strat
					if [ -f $QBIAN_CLI_DIR/$1 ];then
						$QBIAN_CLI_DIR/$1 $@
					else
              $BASE/bin/qbian --help && exit 0
					fi
            exit 0
          ;;
        esac
fi
